doctype html
html
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='chrome=1')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title MatchMeCFL
    link(href='/assets/animate.css', rel='stylesheet')
    link(href='/assets/style.css', rel='stylesheet')
    link(href='http://fonts.googleapis.com/css?family=Rokkitt', rel='stylesheet', type='text/css')
    body
        .decal

        div(id='#Test1', style='color:transparent')
            .jumbotron(style='background-color:rgba(0,0,0,0.5);       position: absolute;left: 0px;top: 0px;')
                .container
                    span(style='font-si')
                        img(src='/images/person.jpg', alt='Mountain View', style='width:304px;height:228px;')
                        table(cellspacing='5', cellpadding='5')
                            tr
                                th
                                    p(style='font-size:32.25em;font-weight: bold') Profile
                                th
                                    p(style='font-size:32.25em;font-weight: bold') Statistics
                            tr
                                td
                                    p(style='font-size:32.25em') Personality
                                td
                                    p(style='font-size:32.25em') 85%
                            tr
                                td
                                    p(style='font-size:32.25em') Sports Knowledge
                                td
                                    p(style='font-size:32.25em') 90%
                            tr
                                td
                                    p(style='font-size:32.25em') Favorite Player
                                td
                                    p(style='font-size:32.25em') Tom Brady
                            tr
                                td
                                    p(style='font-size:32.25em') Favorite Team
                                td
                                    p(style='font-size:32.25em') Toronto Argos
                            tr
                                td
                                    p(style='font-size:32.25em') Number of Games Watched
                                td
                                    p(style='font-size:32.25em') 54
        script(src='http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js')
        script(src='assets/jquery.fittext.js')
        script(src='assets/jquery.lettering.js')
        script(src='http://yandex.st/highlightjs/7.3/highlight.min.js')
        script(src='/js/jquery.textillate.js')
        script.
            hljs.initHighlightingOnLoad();
        script.
            $(function (){
            var log = function (msg) {
            return function () {
            if (console) console.log(msg);
            }
            }
            $('code').each(function () {
            var $this = $(this);
            $this.text($this.html());
            })
            var animateClasses = 'flash bounce shake tada swing wobble pulse flip flipInX flipOutX flipInY flipOutY fadeIn fadeInUp fadeInDown fadeInLeft fadeInRight fadeInUpBig fadeInDownBig fadeInLeftBig fadeInRightBig fadeOut fadeOutUp fadeOutDown fadeOutLeft fadeOutRight fadeOutUpBig fadeOutDownBig fadeOutLeftBig fadeOutRightBig bounceIn bounceInDown bounceInUp bounceInLeft bounceInRight bounceOut bounceOutDown bounceOutUp bounceOutLeft bounceOutRight rotateIn rotateInDownLeft rotateInDownRight rotateInUpLeft rotateInUpRight rotateOut rotateOutDownLeft rotateOutDownRight rotateOutUpLeft rotateOutUpRight hinge rollIn rollOut';
            var $form = $('.playground form')
            , $viewport = $('.playground .viewport');
            var getFormData = function () {
            var data = {
            loop: true,
            in: { callback: log('in callback called.') },
            out: { callback: log('out callback called.') }
            };
            $form.find('[data-key="effect"]').each(function () {
            var $this = $(this)
            , key = $this.data('key')
            , type = $this.data('type');
            data[type][key] = $this.val();
            });
            $form.find('[data-key="type"]').each(function () {
            var $this = $(this)
            , key = $this.data('key')
            , type = $this.data('type')
            , val = $this.val();
            data[type].shuffle = (val === 'shuffle');
            data[type].reverse = (val === 'reverse');
            data[type].sync = (val === 'sync');
            });
            return data;
            };
            $.each(animateClasses.split(' '), function (i, value) {
            var type = '[data-type]'
            , option = '<option value="' + value + '">' + value + '</option>';
            if (/Out/.test(value) || value === 'hinge') {
            type = '[data-type="out"]';
            } else if (/In/.test(value)) {
            type = '[data-type="in"]';
            }
            if (type) {
            $form.find('[data-key="effect"]' + type).append(option);
            }
            });
            $form.find('[data-key="effect"][data-type="in"]').val('fadeInLeftBig');
            $form.find('[data-key="effect"][data-type="out"]').val('hinge');
            $('.jumbotron h1')
            .fitText(0.5)
            .textillate({ in: { effect: 'flipInY' }});
            $('.jumbotron p')
            .fitText(3.2, { maxFontSize: 18 })
            .textillate({ initialDelay: 1000, in: { delay: 3, shuffle: true } });
            setTimeout(function () {
            $('.fade').addClass('in');
            }, 250);
            setTimeout(function () {
            $('h1.glow').removeClass('in');
            }, 2000);
            var $tlt = $viewport.find('.tlt')
            .on('start.tlt', log('start.tlt triggered.'))
            .on('inAnimationBegin.tlt', log('inAnimationBegin.tlt triggered.'))
            .on('inAnimationEnd.tlt', log('inAnimationEnd.tlt triggered.'))
            .on('outAnimationBegin.tlt', log('outAnimationBegin.tlt triggered.'))
            .on('outAnimationEnd.tlt', log('outAnimationEnd.tlt triggered.'))
            .on('end.tlt', log('end.tlt'));
            $form.on('change', function () {
            var obj = getFormData();
            $tlt.textillate(obj);
            }).trigger('change');
            });
        script.
            window.twttr=(function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],t=window.twttr||{};if(d.getElementById(id))return t;js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);t._e=[];t.ready=function(f){t._e.push(f);};return t;}(document,"script","twitter-wjs"));
